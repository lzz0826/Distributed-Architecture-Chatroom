name: order-service
server:
  port: 8081
  servlet:
    context-path: /order
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3307/cloud_order?useUnicode=true&characterEncoding=utf-8
    username: root
    password: tony0204
  application:
    name: order-service

  redis:
    host: 127.0.0.1
    port: 6379
    password: 123456
    database: 0
    timeout: 5000
    lettuce:
      shutdown-timeout: 100
      pool:
        max-active: 3
        min-idle: 2
        max-idle: 3
        max-wait: 1

  flyway:
    enabled: true
    locations: classpath:db/migration # Migration 檔案存放的資料夾
    # 以下是資料庫的連線設定
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    baseline-on-migrate: true
    # 由於是用 postgres 所以需要設定 schema，並且如果不存在會自動建立

  cloud:
    nacos:
      discovery:
        username: nacos
        password: nacos
        server-addr: 127.0.0.1:8848
        namespace: public
      config:
        server-addr: 127.0.0.1:8848

  #線程池
async:
  executor:
    thread:
      core_pool_size: 5
      max_pool_size: 5
      queue_capacity: 99999
      name:
        prefix: async-order-service-


#log4j2
logging:
  config: classpath:log4j2.xml
  level:
    cn.jay.repository: trace

mybatis:
  mapper-locations: classpath*:mapper/*.xml #MyBatis映射文件的位置
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #開啟SQL語句打印

#分页插件
pagehelper:
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params: count=countSql

##eureka
#eureka:
#  client:
#    service-url:
#      defaultZone: http://127.0.0.1:10086/eureka
user-service:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #負載均衡規則
ribbon:
  eager-load:
    enabled: true #開啟飢餓加載
    clients: #指定飢餓加載的服務名
      -user-service