name: user-service
server:
  port: 8080
  servlet:
    context-path: /user
netty:
  port: 7891
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/cloud_user?useUnicode=true&characterEncoding=utf-8
    username: root
    password: tony0204
  application:
    name: user-service

  flyway:
      enabled: true
      locations: classpath:db/migration # Migration 檔案存放的資料夾
      # 以下是資料庫的連線設定
      url: ${spring.datasource.url}
      user: ${spring.datasource.username}
      password: ${spring.datasource.password}
      baseline-on-migrate: true
      # 由於是用 postgres 所以需要設定 schema，並且如果不存在會自動建立

  redis:
    host: 127.0.0.1
    port: 6379
    password: 123456
    database: 0
    timeout: 5000
    lettuce:
      shutdown-timeout: 100
      pool:
        max-active: 3
        min-idle: 2
        max-idle: 3
        max-wait: 1
  cloud:
    nacos:
      discovery:
        username: nacos
        password: nacos
        server-addr: 127.0.0.1:8848
        namespace: public
      config:
        server-addr: 127.0.0.1:8848

#檔案上傳
tmp:
  upload:
    file-pth: ./uploadTmp

##eureka
#eureka:
#  client:
#    service-url:
#      defaultZone: http://127.0.0.1:10086/eureka

mybatis:
  mapper-locations: classpath*:mapper/*.xml #MyBatis映射文件的位置
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #开启SQL语句打印

#分頁插件
pagehelper:
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params: count=countSql


jwt:
  header: Authorization
  secret: 12345678
  expiration: 10000000
  timeout: 99999 #token過期時間(秒)

# 異步線程配置
async:
  executor:
    thread:
      core_pool_size: 5 # 配置核心线程数
      max_pool_size: 5 # 配置最大线程数
      queue_capacity: 99999 # 配置队列大小
      name:
        prefix: async-service- # 配置线程池中的线程的名称前缀

chatroom:
  silenceCache_prefix: ChatSilenceCache- #